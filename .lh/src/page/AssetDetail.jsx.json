{
    "sourceFile": "src/page/AssetDetail.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734082095828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734082095828,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { \r\n  TrendingUp, Clock, DollarSign, ArrowUpRight, \r\n  Calendar, RefreshCw, AlertCircle, ChevronRight, ArrowLeft, ArrowUp, ArrowDown, Check\r\n} from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { format, differenceInDays } from 'date-fns';\r\nimport { getTransactions as getTransactionHistory } from '../utils/transactionStorage';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\nimport zoomPlugin from 'chartjs-plugin-zoom';\r\nimport BottomNavigation from '../components/BottomNavigation';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Register the zoom plugin\r\nChartJS.register(zoomPlugin);\r\n\r\n// Import your components\r\nimport AnimatedProgressBar from '../components/AnimatedProgressBar';\r\n\r\n// Add the getCategoryGradient function\r\nconst getCategoryGradient = (category) => {\r\n  switch (category?.toLowerCase()) {\r\n    case 'real estate':\r\n      return 'linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(37, 99, 235, 0.9))';\r\n    case 'wine':\r\n    case 'whiskey':\r\n      return 'linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(185, 28, 28, 0.9))';\r\n    case 'art':\r\n      return 'linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(126, 34, 206, 0.9))';\r\n    case 'marine':\r\n      return 'linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(3, 105, 161, 0.9))';\r\n    case 'gold':\r\n      return 'linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(161, 98, 7, 0.9))';\r\n    case 'secure yield':\r\n      return 'linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(21, 128, 61, 0.9))';\r\n    default:\r\n      return 'linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(215, 25, 33, 0.9))';\r\n  }\r\n};\r\n\r\n// Add this keyframe animation to your CSS\r\nconst pulseAnimation = {\r\n  '0%': { opacity: 0.4 },\r\n  '50%': { opacity: 1 },\r\n  '100%': { opacity: 0.4 },\r\n};\r\n\r\nexport default function AssetDetail() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { asset } = location.state || {};\r\n\r\n  // Redirect if no asset data\r\n  useEffect(() => {\r\n    if (!asset) {\r\n      navigate('/portfolio');\r\n    }\r\n  }, [asset, navigate]);\r\n\r\n  // States for various data\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [yieldData, setYieldData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: 'Daily Yield',\r\n        data: [],\r\n        borderColor: '#10B981',\r\n        tension: 0.4,\r\n      }\r\n    ]\r\n  });\r\n  const [maturityInfo, setMaturityInfo] = useState({\r\n    daysLeft: 0,\r\n    date: new Date()\r\n  });\r\n\r\n  // Fetch asset data on mount\r\n  useEffect(() => {\r\n    if (asset?.id) {\r\n      // Get transaction history\r\n      const txHistory = getTransactionHistory().filter(tx => tx.assetId === asset.id);\r\n      setTransactions(txHistory);\r\n\r\n      // Calculate maturity info\r\n      const maturityDate = new Date(asset.maturityDate);\r\n      const daysToMaturity = differenceInDays(maturityDate, new Date());\r\n      setMaturityInfo({\r\n        daysLeft: daysToMaturity,\r\n        date: maturityDate\r\n      });\r\n\r\n      // Generate yield data (placeholder - replace with real data)\r\n      const generateYieldData = () => {\r\n        const days = 30; // Last 30 days\r\n        const labels = [];\r\n        const data = [];\r\n        const baseYield = parseFloat(asset.currentApy) / 365; // Daily yield\r\n\r\n        for (let i = days - 1; i >= 0; i--) {\r\n          const date = new Date();\r\n          date.setDate(date.getDate() - i);\r\n          labels.push(format(date, 'MMM dd'));\r\n          // Add some random variation to daily yield\r\n          const dailyYield = baseYield * (1 + (Math.random() - 0.5) * 0.1);\r\n          data.push(dailyYield.toFixed(3));\r\n        }\r\n\r\n        return { labels, data };\r\n      };\r\n\r\n      const { labels, data } = generateYieldData();\r\n      setYieldData(prev => ({\r\n        ...prev,\r\n        labels,\r\n        datasets: [{\r\n          ...prev.datasets[0],\r\n          data\r\n        }]\r\n      }));\r\n    }\r\n  }, [asset?.id]);\r\n\r\n  // Handle invest more\r\n  const handleInvestMore = () => {\r\n    navigate('/investment-detail', { \r\n      state: {\r\n        title: asset.name,\r\n        floatingapy: `${asset.currentApy}%`,\r\n        hashtag: asset.assetType,\r\n        // ... other required props\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add chart options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false,\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          callback: value => value + '%'\r\n        }\r\n      }\r\n    },\r\n    interaction: {\r\n      intersect: false,\r\n      mode: 'index',\r\n    },\r\n  };\r\n\r\n  const handleLiquidate = () => {\r\n    if (maturityInfo.daysLeft > 0) {\r\n      toast.error(`Cannot liquidate. Asset locked for ${maturityInfo.daysLeft} more days.`);\r\n      return;\r\n    }\r\n    // Handle liquidation logic here\r\n  };\r\n\r\n  if (!asset) return null;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 pb-32\">\r\n      {/* Hero Section with gradient overlay */}\r\n      <div \r\n        className=\"h-48 sm:h-56 bg-cover bg-center relative\"\r\n        style={{ \r\n          backgroundImage: `url(${asset.backgroundImage || asset.icon})`,\r\n        }}\r\n      >\r\n        {/* Gradient Overlay - Darker for better text visibility */}\r\n        <div \r\n          className=\"absolute inset-0\" \r\n          style={{ \r\n            background: `${getCategoryGradient(asset.assetType)}, rgba(0, 0, 0, 0.3)` \r\n          }}\r\n        />\r\n        \r\n        {/* Back Button with better contrast */}\r\n        <button \r\n          onClick={() => navigate(-1)}\r\n          className=\"absolute top-4 left-4 z-10 p-2 rounded-full bg-black/30 hover:bg-black/40 text-white backdrop-blur-sm\"\r\n        >\r\n          <ArrowLeft className=\"w-5 h-5\" />\r\n        </button>\r\n\r\n        {/* Asset Type Badge */}\r\n        <div className=\"absolute top-4 right-4 z-10\">\r\n          <span className=\"px-3 py-1.5 text-xs font-medium text-white bg-black/30 rounded-full backdrop-blur-sm border border-white/20\">\r\n            {asset.assetType}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6\">\r\n        {/* Asset Card */}\r\n        <div className=\"bg-white rounded-xl p-6 shadow-sm -mt-20 relative z-10 border border-gray-100\">\r\n          <div className=\"flex items-center justify-between mb-8\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"w-16 h-16 bg-gray-50 rounded-xl flex items-center justify-center border border-gray-100\">\r\n                <img src={asset.icon} alt={asset.name} className=\"w-10 h-10\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-xl font-semibold text-gray-900\">{asset.name}</h1>\r\n                <div className=\"flex items-center space-x-2 mt-1\">\r\n                  <span className=\"text-sm text-gray-500\">Asset ID:</span>\r\n                  <code className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\r\n                    {asset.id.slice(0, 8)}...{asset.id.slice(-6)}\r\n                  </code>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Value Cards - Enhanced */}\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6\">\r\n            {/* Current Value Card - More intuitive */}\r\n            <div className=\"bg-gradient-to-br from-[#d71921]/5 to-[#d71921]/10 rounded-xl p-4\">\r\n              <div className=\"flex justify-between items-start mb-3\">\r\n                <p className=\"text-sm text-gray-600\">Investment Value</p>\r\n                <div className=\"flex items-center space-x-1 bg-green-100 px-2 py-0.5 rounded-full\">\r\n                  <div className=\"w-1.5 h-1.5 rounded-full bg-green-500 animate-pulse\" />\r\n                  <span className=\"text-xs font-medium text-green-700\">Live</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-baseline justify-between\">\r\n                  <p className=\"text-2xl font-bold text-gray-900\">${asset.currentValue}</p>\r\n                  <div className=\"flex items-center space-x-1 text-green-600\">\r\n                    <TrendingUp className=\"w-4 h-4\" />\r\n                    <span className=\"text-sm font-medium\">+${asset.accumulatedYield}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between text-xs text-gray-500 pt-2 border-t border-gray-200\">\r\n                  <div>\r\n                    <p>Initial Investment</p>\r\n                    <p className=\"font-medium text-gray-700\">${asset.initialInvestment}</p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p>Total Returns</p>\r\n                    <p className=\"font-medium text-green-600\">+{((asset.currentValue - asset.initialInvestment) / asset.initialInvestment * 100).toFixed(1)}%</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* APY Performance Card - Simplified */}\r\n            <div className=\"bg-gradient-to-br from-blue-50 to-blue-100/50 rounded-xl p-4\">\r\n              <div className=\"flex justify-between items-start mb-3\">\r\n                <p className=\"text-sm text-gray-600\">APY Performance</p>\r\n                <div className=\"flex items-center space-x-1 px-2 py-0.5 rounded-full bg-blue-100\">\r\n                  <span className=\"text-xs font-medium text-blue-700\">Real-time</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {/* Live APY with pulse */}\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\r\n                    <span className=\"text-sm text-gray-600\">Current APY</span>\r\n                  </div>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{asset.currentApy}%</p>\r\n                </div>\r\n\r\n                {/* Target APY */}\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className=\"text-lg\">🎯</span>\r\n                    <span className=\"text-sm text-gray-600\">Target APY</span>\r\n                  </div>\r\n                  <p className=\"text-lg text-gray-600\">{asset.targetApy}%</p>\r\n                </div>\r\n\r\n                {/* Performance Status */}\r\n                <div className=\"pt-2 border-t border-gray-200\">\r\n                  {asset.currentApy > asset.targetApy ? (\r\n                    <div className=\"flex items-center justify-between text-green-600 bg-green-50 p-2 rounded-lg\">\r\n                      <TrendingUp className=\"w-4 h-4\" />\r\n                      <span className=\"text-sm font-medium\">+{(asset.currentApy - asset.targetApy).toFixed(1)}% Above Target</span>\r\n                    </div>\r\n                  ) : asset.currentApy < asset.targetApy ? (\r\n                    <div className=\"flex items-center justify-between text-orange-600 bg-orange-50 p-2 rounded-lg\">\r\n                      <AlertCircle className=\"w-4 h-4\" />\r\n                      <span className=\"text-sm font-medium\">-{(asset.targetApy - asset.currentApy).toFixed(1)}% Below Target</span>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex items-center justify-between text-blue-600 bg-blue-50 p-2 rounded-lg\">\r\n                      <Check className=\"w-4 h-4\" />\r\n                      <span className=\"text-sm font-medium\">On Target</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* New Section: Investment Details */}\r\n          <div className=\"bg-white rounded-xl p-4 mb-6\">\r\n            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4\">\r\n              <div className=\"bg-gray-50 rounded-lg p-3\">\r\n                <p className=\"text-xs text-gray-500 mb-1\">Investment Date</p>\r\n                <p className=\"text-sm font-medium text-gray-900\">\r\n                  {format(new Date(asset.investmentDate), 'MMM dd, yyyy')}\r\n                </p>\r\n              </div>\r\n              <div className=\"bg-gray-50 rounded-lg p-3\">\r\n                <p className=\"text-xs text-gray-500 mb-1\">Next Distribution</p>\r\n                <p className=\"text-sm font-medium text-gray-900\">\r\n                  {format(new Date(asset.nextDistribution), 'MMM dd, yyyy')}\r\n                </p>\r\n              </div>\r\n              <div className=\"bg-gray-50 rounded-lg p-3\">\r\n                <p className=\"text-xs text-gray-500 mb-1\">Distribution Frequency</p>\r\n                <p className=\"text-sm font-medium text-gray-900\">{asset.redemptionFrequency}</p>\r\n              </div>\r\n              <div className=\"bg-gray-50 rounded-lg p-3\">\r\n                <p className=\"text-xs text-gray-500 mb-1\">Asset Type</p>\r\n                <p className=\"text-sm font-medium text-gray-900\">{asset.assetType}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* New Section: Risk Metrics */}\r\n          <div className=\"bg-white rounded-xl p-4 mb-6\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Risk Assessment</h3>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"bg-gray-50 rounded-lg p-3\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <p className=\"text-xs text-gray-500\">Volatility</p>\r\n                  <span className=\"px-2 py-0.5 text-xs font-medium bg-green-100 text-green-700 rounded-full\">Low</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 rounded-lg p-3\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <p className=\"text-xs text-gray-500\">Liquidity</p>\r\n                  <span className=\"px-2 py-0.5 text-xs font-medium bg-yellow-100 text-yellow-700 rounded-full\">Medium</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Maturity Timeline - Move it up for better visibility */}\r\n          <div className=\"bg-white rounded-xl p-4 mb-4 -mt-6 mx-4 relative z-20 shadow-lg border border-gray-100\">\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Clock className=\"w-4 h-4 text-[#d71921]\" />\r\n                <p className=\"text-sm font-medium text-gray-900\">Maturity Status</p>\r\n              </div>\r\n              <span className={`text-xs font-medium px-2 py-1 rounded-full ${\r\n                maturityInfo.daysLeft > 0 \r\n                  ? 'bg-orange-100 text-orange-700' \r\n                  : 'bg-green-100 text-green-700'\r\n              }`}>\r\n                {maturityInfo.daysLeft > 0 \r\n                  ? `${maturityInfo.daysLeft} days locked` \r\n                  : 'Ready to Liquidate'}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"relative pt-2\">\r\n              <div className=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n                <div \r\n                  className=\"h-full bg-gradient-to-r from-[#d71921] to-[#ff4b55] rounded-full transition-all duration-500 relative\"\r\n                  style={{ \r\n                    width: `${Math.max(0, Math.min(100, (1 - maturityInfo.daysLeft / 365) * 100))}%` \r\n                  }}\r\n                >\r\n                  {/* Animated glow effect */}\r\n                  <div \r\n                    className=\"absolute top-0 right-0 h-full w-4 animate-pulse\"\r\n                    style={{ \r\n                      background: 'linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent)',\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-between mt-2\">\r\n                <div className=\"text-xs\">\r\n                  <p className=\"text-gray-500\">Investment Date</p>\r\n                  <p className=\"font-medium text-gray-700\">{format(new Date(asset.investmentDate), 'MMM dd, yyyy')}</p>\r\n                </div>\r\n                <div className=\"text-xs text-right\">\r\n                  <p className=\"text-gray-500\">Maturity Date</p>\r\n                  <p className=\"font-medium text-gray-700\">{format(maturityInfo.date, 'MMM dd, yyyy')}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Yield Chart */}\r\n        <div className=\"bg-white rounded-xl p-6 shadow-sm mt-4 border border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Yield Performance</h2>\r\n          <div className=\"h-64\">\r\n            <Line data={yieldData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Transaction History - Update the transaction history section */}\r\n        <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-sm mt-4 border border-gray-100\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">Transaction History</h2>\r\n            <select \r\n              className=\"text-sm border rounded-lg px-2 py-1\"\r\n              onChange={(e) => setTransactionFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">All Transactions</option>\r\n              <option value=\"investment\">Investments</option>\r\n              <option value=\"yield\">Yield Payments</option>\r\n            </select>\r\n          </div>\r\n          \r\n          {transactions.length > 0 ? (\r\n            <div className=\"space-y-3\">\r\n              {transactions.map((tx, index) => (\r\n                <div \r\n                  key={index}\r\n                  className=\"flex items-center justify-between p-3 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors\"\r\n                >\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\r\n                      tx.type === 'investment' \r\n                        ? 'bg-green-100' \r\n                        : tx.type === 'yield' \r\n                          ? 'bg-blue-100'\r\n                          : 'bg-red-100'\r\n                    }`}>\r\n                      {tx.type === 'investment' ? (\r\n                        <ArrowUp className=\"w-4 h-4 text-green-600\" />\r\n                      ) : tx.type === 'yield' ? (\r\n                        <RefreshCw className=\"w-4 h-4 text-blue-600\" />\r\n                      ) : (\r\n                        <ArrowDown className=\"w-4 h-4 text-red-600\" />\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900\">\r\n                        {tx.type === 'investment' ? 'Investment' : tx.type === 'yield' ? 'Yield Payment' : 'Withdrawal'}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        {format(new Date(tx.date), 'MMM dd, yyyy • HH:mm')}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p className={`font-medium ${\r\n                      tx.type === 'investment' \r\n                        ? 'text-green-600' \r\n                        : tx.type === 'yield'\r\n                          ? 'text-blue-600'\r\n                          : 'text-red-600'\r\n                    }`}>\r\n                      {tx.type === 'investment' ? '+' : tx.type === 'yield' ? '+' : '-'}${tx.amount}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500\">{tx.status}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-8\">\r\n              <RefreshCw className=\"w-12 h-12 text-gray-300 mx-auto mb-3\" />\r\n              <p className=\"text-gray-500\">No transactions yet</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Fixed Bottom Bar - Adjust bottom padding to accommodate BottomNavigation */}\r\n      <div className=\"fixed bottom-[50px] left-0 right-0 bg-white border-t border-gray-200 p-4 z-20\">\r\n        <div className=\"max-w-3xl mx-auto flex items-center justify-between gap-4\">\r\n          <button \r\n            onClick={handleLiquidate}\r\n            disabled={maturityInfo.daysLeft > 0}\r\n            className={`flex-1 px-4 py-3 border-2 rounded-xl font-medium transition-colors\r\n              ${maturityInfo.daysLeft > 0 \r\n                ? 'border-gray-200 text-gray-400 bg-gray-50' \r\n                : 'border-[#d71921] text-[#d71921] hover:bg-red-50'}`}\r\n          >\r\n            {maturityInfo.daysLeft > 0 ? 'Locked' : 'Liquidate Position'}\r\n          </button>\r\n          <button \r\n            onClick={handleInvestMore}\r\n            className=\"flex-1 px-4 py-3 bg-[#d71921] text-white rounded-xl font-medium hover:bg-[#b5171a] transition-colors\"\r\n          >\r\n            Invest More\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add BottomNavigation */}\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Helper component for metric cards\r\nconst MetricCard = ({ icon, label, value, subtext }) => (\r\n  <div className=\"bg-gray-50 rounded-xl p-4\">\r\n    <div className=\"flex items-center space-x-2 mb-2\">\r\n      {icon}\r\n      <span className=\"text-sm text-gray-600\">{label}</span>\r\n    </div>\r\n    <p className=\"text-lg font-semibold text-gray-900\">{value}</p>\r\n    <p className=\"text-xs text-gray-500 mt-1\">{subtext}</p>\r\n  </div>\r\n); "
        }
    ]
}